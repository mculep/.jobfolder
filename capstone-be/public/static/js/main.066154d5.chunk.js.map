{"version":3,"sources":["components/Sidebar.jsx","components/SignIn.jsx","components/SignUp.jsx","components/Credentials.jsx","components/DisplayPanel.jsx","components/TimeSelect.jsx","components/Settings.jsx","components/HeadsUpDisplay.jsx","components/Dashboard.jsx","components/Hero.jsx","App.js","reportWebVitals.js","index.js"],"names":["navBarItems","icon","value","content","Sidebar","id","getSummaryData","history","useHistory","a","axios","get","push","className","map","item","onClick","e","logOut","SignIn","setName","setWhichCredPage","credStatus","setCredStatus","setId","populateDashboard","useState","emailError","showEmailError","passwordError","showPasswordError","checkSession","data","console","log","preventDefault","target","elements","email","password","signInCreds","post","creds","status","first","document","querySelector","classList","replace","useEffect","onSubmit","htmlFor","type","name","to","SignUp","userState","setUserState","last","address_line1","address_line2","zipcode","state","daily_app_goal","formData","wasSignUpSuccessful","method","placeholder","Object","entries","States","abbr","Credentials","consoleLogFormData","whichCredPage","DisplayPanel","displayOutPut","changeDisplayOutput","displayCategory","jobAppFormModalIsOpen","setJobAppFormModalIsOpen","jobFormFeedbackModalIsOpen","setJobFormFeedbackModalIsOpen","IQFormModalIsOpen","setIQFormModalIsOpen","IQFeedbackModalIsOpen","setIQFeedbackModal","contactsModalIsOpen","setContactsModalIsOpen","contactsFeedbackModalIsOpen","setContactsFeedbackModalIsOpen","docUploadModalIsOpen","setDocUploadModalIsOpen","docUploadFeedbackModalIsOpen","setDocUploadFeedbackModalIsOpen","interviewModalIsOpen","setInterviewModalIsOpen","interviewFeedBackIsOpen","setInterviewFeedBackIsOpen","companyName","setCompanyName","companyId","setCompanyId","date_interviewed","dataset","doc_id","el","closest","remove","iq_id","company_name","role","phone","website","contact_name","contact_phone","contact_email","date_applied","newAppData","user_id","Date","date_contacted","contactObj","file","files","formdata","FormData","token","getTime","append","question","answer","IQObject","closeTimeoutMS","isOpen","onRequestClose","style","position","toLocaleDateString","createNewAppRecord","action","idx","data-companyid","interviewed","companyEl","innerText","companyid","data-iq_id","deleteIQ","encType","data-token","title","href","deleteDoc","data-doc_id","TimeSelect","dayOfWeek","Settings","stgsModalOpen","setStgsModalOpen","stgsFdbackModalOpen","setStgsFdbackModalOpen","tenDayFollowUp","tyFollowUp","sun_iq_time","iq_sun","mon_iq_time","iq_mon","tue_iq_time","iq_tue","wed_iq_time","iq_wed","thu_iq_time","iq_thu","fri_iq_time","iq_fri","sat_iq_time","iq_sat","body","parseInt","checked","updateSettings","HeadsUpDisplay","countOfJobs","appReality","appRatio","inspiration","quote","author","Dashboard","setDisplayCategory","category","currentTarget","response","Hero","App","setCountOfJobs","setAppRatio","setAppReality","setInspiration","uid","jobsAppliedTo","jobCount","dailyAppGoal","dailyAppReality","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.066154d5.chunk.js","sourcesContent":["\nimport { IoIosPaper } from \"react-icons/io\";\nimport { IoNewspaper } from \"react-icons/io5\";\nimport { IoBriefcase } from \"react-icons/io5\";\nimport { RiFilePaper2Fill } from \"react-icons/ri\";\nimport { BsFillQuestionSquareFill } from \"react-icons/bs\";\n// import { RiContactsBookFill } from \"react-icons/ri\";\n\n\n\n\n\nimport './styles/Sidebar.css'\nimport {\n    useHistory\n} from 'react-router-dom';\n\nimport axios from 'axios'   \nconst navBarItems = [\n    {icon:<IoBriefcase  />, value: 'job-tracker', content: 'Job Tracker'},\n    {icon:<IoIosPaper />, value: 'resume', content: 'Resumes'},\n    {icon:<IoNewspaper />,value: 'thank-you', content: 'Thank You Letters'},\n    {icon:<RiFilePaper2Fill />, value: 'cover', content: 'Cover Letters'},\n    // {value: 'templates', content: 'Templates'},\n    // {value: 'calendar', content: 'Calendar'}\n    {icon:<BsFillQuestionSquareFill  />, value: 'interview-questions', content: 'Interview Questions'},\n]    \n\nfunction Sidebar({id, getSummaryData}) {\n    const history = useHistory();\n    \n    async function logOut(){\n        await axios.get('/sign-in/sign-out')\n        history.push('/')\n    }\n\n    return (\n    <>\n        <div className=\"sidebar-container\">\n        <h1 className=\"sidebar-title\">.jobfolder</h1>\n        <div className=\"sidebar\">\n                {navBarItems.map(item => \n                    <div onClick={(e)=>getSummaryData(e)} className={item.value}> \n                        <p className=\"icons\">{item.icon}</p><p className=\"link-items\">{item.content}</p>\n                    </div>)\n                }\n                <div className='contacts'onClick={(e)=>getSummaryData(e)}>Contacts</div>\n\n                <div onClick={(e)=>logOut(e)}>Log out</div>\n                </div>\n        </div>\n    </>\n    )\n}\n\nexport default Sidebar\n\n","import './styles/Signin.css'\nimport {\n    Link,\n    Redirect,\n    useHistory\n} from 'react-router-dom';\n\nimport axios from 'axios'\nimport {useState, useEffect } from 'react'\nimport { HiReceiptRefund } from 'react-icons/hi';\n\nfunction SignIn({setName, credStatus, setCredStatus, setWhichCredPage, setId, populateDashboard}) {\n    const [emailError, showEmailError] = useState(false)\n    const [passwordError,showPasswordError] = useState(false)\n    const [jobCount, setJobCount] = useState(0)\n    const history = useHistory()\n\n    const checkSession = async () => {\n        const {data} = await axios.get('/sign-in/check-session')\n        console.log('line 19', data)\n        if(data === 'null'){\n            return\n        } else {\n            populateDashboard(data)\n            console.log('popDash ran')\n            history.push('/dashboard')\n        }\n    }\n    useEffect(()=> {\n        checkSession()\n    }, [])\n\n   async function sendSignInCreds (e) {\n        e.preventDefault()\n        console.log('signin function is working')    \n        const { email, password } = e.target.elements\n        console.log('Email', email.value, 'Password', password.value)\n        const signInCreds = {email: email.value, password:password.value}\n        let creds;\n        \n        try {\n            creds = await axios.post('/sign-in', signInCreds)\n            console.log(creds.data.status)\n            switch(creds.data.status){\n                case 'success':\n                    console.log('line 49', creds.data)\n                    console.log(creds.data);\n                    console.log(creds.data.id)\n                    setId(creds.data.id)\n                    setName(creds.data.first)\n                    populateDashboard(creds.data.id);\n                    history.push('/dashboard');\n                    break;\n                case 'no username':\n                    console.log('line 58', creds.data)\n                    showPasswordError(false)\n                    showEmailError(true)\n                    let emailCredential = document.querySelector('.email-credential')\n                    emailCredential.classList.replace('success', 'error')\n                    break;\n                case 'no password':\n                    console.log('line 64', creds.data)\n                    showPasswordError(true)\n                    showEmailError(false)\n                    let passwordCredential = document.querySelector('.password-credential')\n                    passwordCredential.classList.replace('success', 'error')\n                break;\n            }\n        } catch(e) {\n            console.log(e)\n        }\n\n        \n   }\n\n    return (\n    <>\n        \n        <form className=\"signin-container\" onSubmit={sendSignInCreds}>\n            <div><h1 className=\"signin-title\">.jobfolder</h1></div>         \n                <div className=\"signin\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input \n                    className='email-credential success' \n                    type=\"text\" \n                    name=\"email\" \n                    id=\"email\"/>\n                    {emailError ? <p className='email-credential emessage'>This email doesn't match our records.</p> : null}\n                    <label htmlFor=\"password\">Password</label>\n                    <input \n                    className='password-credential success' \n                    type=\"password\" \n                    name=\"password\" \n                    id=\"password\"/>\n                    {passwordError ? \n                    <p className='password-credential emessage'>This password doesn't match anything we have.</p>: null}\n                    <Link to='forgot-password' className=\"forgot-link\">Forgot Password?</Link>\n                    <input className=\"signin-btn\" type=\"submit\" value=\"Sign In\"/>\n                    <div>\n                    <p className=\"first-time\">First time here?</p>\n                    <button className=\"signup-page-btn\" onClick={()=>setWhichCredPage('sign-up')}>Sign Up</button>\n                </div>\n            </div>  \n        </form>\n        \n         \n\n\n    </>\n    )\n}\n\nexport default SignIn","import States from '../States.json'\nimport './styles/Signup.css'\nimport {\n    Link\n} from 'react-router-dom';\n\nimport axios from 'axios'\nimport {useState} from 'react'\n\nfunction SignUp({setWhichCredPage}) {\n    const [userState, setUserState]=useState('success')\n    \n    async function sendSignUpData(e){\n        e.preventDefault();\n        const { first, last, password, email,\n        address_line1, address_line2, zipcode, state, daily_app_goal} = e.target.elements\n        console.log(e.target.elements)\n        const formData = { first: first.value, last:last.value, \n            password:password.value, email:email.value, address_line1:address_line1.value, \n            address_line2:address_line2.value,\n            zipcode:zipcode.value, state:state.value, daily_app_goal:daily_app_goal.value}\n\n        // console.log(formData)\n        let wasSignUpSuccessful;\n\n        wasSignUpSuccessful = await axios.post('/sign-up', formData)\n        console.log('user state', wasSignUpSuccessful.data)\n      \n        if( wasSignUpSuccessful.data === 'user exists'){\n            setUserState('error')\n        }\n        if( wasSignUpSuccessful.data === 'success'){\n            setWhichCredPage('sign-in')\n        } \n\n    }\n    return (\n      <> \n        <form className=\"signup-container\" onSubmit={sendSignUpData} method=\"POST\">\n            <div><h1 className=\"signup-title\">.jobfolder</h1></div>\n                <div className=\"signup-form\">\n                        <label htmlFor=\"first\">First Name</label>\n                        <input className=\"signup-input\" type=\"text\" name=\"first\" id=\"first\" placeholder=\"\"/>\n\n                        <label htmlFor=\"last\">Last Name</label>\n                        <input className=\"signup-input\" type=\"text\" name=\"last\" id=\"last\"/>\n\n                        <label htmlFor=\"password\">Password</label>\n                        <input className=\"signup-input\" type=\"text\" name=\"password\" id=\"password\"/>\n\n                        <label htmlFor=\"email\">Email</label>\n                        <input className={userState} type=\"text\" name=\"email\" id=\"email\"/>\n                        {userState==='error'? <p className='error-message'>User with this email already exists.</p>:null}\n\n                        <label htmlFor=\"address_line1\">Address Line 1</label>\n                        <input className=\"signup-input\" type=\"text\" name=\"address_line1\" id=\"address_line1\"/>\n\n                        <label htmlFor=\"address_line2\">Address Line 2</label>\n                        <input className=\"signup-input\" type=\"text\" name=\"address_line2\" id=\"address_line2\"/>\n\n                        <label htmlFor=\"zipcode\">Zipcode</label>\n                        <input className=\"signup-input\" type=\"text\" name=\"zipcode\" id=\"zipcode\"/>\n\n                        <div className=\"state-daily\">\n                        <label htmlFor=\"state\">State</label>\n                        <select className=\"signup-input\" id=\"state\" name=\"state\">\n                        <option value=\"\"></option>\n\n                        {\n                            Object.entries(States).map(([abbr, name] ) => (\n                            <option value={name}>{abbr}</option>\n                            ))\n                        }\n\n                        </select>\n                            <label htmlFor=\"daily_app_goal\">Daily Application Quota</label>\n                            <select  className=\"signup-input\" name=\"daily_app_goal\" id=\"number\" >\n                            <option value=\"\"></option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                            <option value=\"6\">6</option>\n                            <option value=\"7\">7</option>\n                            <option value=\"8\">8</option>\n                            <option value=\"9\">9</option>\n                            <option value=\"10\">10</option>\n                            <option value=\"11\">11</option>\n                            <option value=\"12\">12</option>\n                            <option value=\"13\">13</option>\n                            <option value=\"14\">14</option>\n                            <option value=\"15\">15</option>\n                        </select>\n                        </div>\n                    <input className=\"new-user-signup-btn\" type=\"submit\" value=\"Sign Up\"/>\n                \n            </div>\n         </form>\n      </>\n\n    )\n}\n\nexport default SignUp","import { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\n\nfunction Credentials({setName, consoleLogFormData, setId, populateDashboard}){\n    const [whichCredPage, setWhichCredPage] = useState('sign-in')\n    const [credStatus, setCredStatus] = useState('success')\n    return(\n        <div>\n            { whichCredPage === 'sign-in' ? <SignIn setName={setName} populateDashboard={populateDashboard} setId={setId}credStatus={credStatus} setCredStatus={setCredStatus}setWhichCredPage={setWhichCredPage}/> \n            : \n            <SignUp consoleLogFormData={consoleLogFormData} setWhichCredPage={setWhichCredPage}/>}\n        </div>\n    )\n}\nexport default Credentials","import './styles/Dashboard.css'\nimport Modal from 'react-modal'\nimport {useState} from 'react'\nimport axios from 'axios';\n\n\nfunction DisplayPanel({\n    id,\n    displayOutPut, \n    changeDisplayOutput,\n    displayCategory,\n}){\n        const [jobAppFormModalIsOpen, setJobAppFormModalIsOpen] = useState(false)\n        const [jobFormFeedbackModalIsOpen, setJobFormFeedbackModalIsOpen] = useState(false)\n        const [IQFormModalIsOpen, setIQFormModalIsOpen] = useState(false)\n        const [IQFeedbackModalIsOpen, setIQFeedbackModal] = useState(false)\n        const [contactsModalIsOpen, setContactsModalIsOpen] = useState(false)\n        const [contactsFeedbackModalIsOpen, setContactsFeedbackModalIsOpen] = useState(false)\n        const [docUploadModalIsOpen, setDocUploadModalIsOpen] = useState(false)\n        const [docUploadFeedbackModalIsOpen, setDocUploadFeedbackModalIsOpen] = useState(false)\n        const [interviewModalIsOpen, setInterviewModalIsOpen] = useState(false)\n        const [interviewFeedBackIsOpen, setInterviewFeedBackIsOpen] = useState(false)\n        const [companyName, setCompanyName] = useState('')\n        const [companyId, setCompanyId] = useState(0)\n        \n        async function updateInterview(e){\n            e.preventDefault();\n            const {date_interviewed} = e.target\n            console.log(date_interviewed.value)\n            const {data} = await axios.post('/dashboard/update-interview', {date_interviewed:date_interviewed.value, id:companyId})\n            changeDisplayOutput(data)\n            setInterviewModalIsOpen(false)\n            setInterviewFeedBackIsOpen(true)\n\n        }\n        async function deleteDoc(e){\n            console.log(e.target.dataset)\n            const {doc_id} = e.target.dataset\n            const response = await axios.post('/dashboard/delete-doc/', {doc_id});\n            const el = e.target.closest('ul')\n            console.log(el)\n            el.remove()\n        }\n        \n        async function deleteIQ(e){\n            const {iq_id} = e.target.dataset\n            const {data} = await axios.post('/dashboard/delete-iq', {iq_id})\n            console.log(data)\n            changeDisplayOutput(data)\n        }\n        async function createNewAppRecord(e){\n            e.preventDefault()\n            const {company_name, role, phone, website, contact_name, contact_phone,\n                contact_email, date_applied} = e.target\n                \n                const newAppData = {user_id:id, company_name:company_name.value, role:role.value, phone:phone.value,\n                    website:website.value, contact_name:contact_name.value, contact_phone:contact_phone.value,\n                    contact_email:contact_email.value, date_applied:new Date(date_applied.value)}\n                    console.log(newAppData)\n                    const {data} = await axios.post('/dashboard/new-job-application', newAppData)\n                    console.log(data)\n                    changeDisplayOutput(data)\n                    setJobAppFormModalIsOpen(false)\n                    setJobFormFeedbackModalIsOpen(true)\n                }\n                async function createNewContact(e){\n                    e.preventDefault()\n                    const {name, phone, email, date_contacted} = e.target.elements\n                    const contactObj = {\n                        name:name.value, phone:phone.value,\n                        email:email.value, \n                        date_contacted:date_contacted.value,\n                        user_id:id\n                    }\n\n                    const {data} = await axios.post(`/dashboard/new-contact/${id}`, contactObj)\n                    console.log(data)\n                    changeDisplayOutput(data)\n                    setContactsModalIsOpen(false)\n                    setContactsFeedbackModalIsOpen(true)\n                }\n\n        async function uploadDocument(e){\n            e.preventDefault()\n            console.log('display category', displayCategory)\n            console.log(e.target.file.files)\n            let file = e.target.file.files[0]\n            let formdata = new FormData();\n            let token = (new Date()).getTime()\n            formdata.append('file', file)\n            formdata.append('id',id)\n            formdata.append('doc_type', displayCategory)\n            formdata.append('token',token)\n            const {data} = await axios.post(`/dashboard/upload/${id}`, formdata)\n            console.log(data)\n            changeDisplayOutput(data)\n            setDocUploadModalIsOpen(false)\n            setDocUploadFeedbackModalIsOpen(true)\n\n        }\n  \n        async function createNewIQ(e){\n                    e.preventDefault()\n                    const{question, answer} = e.target\n                    console.log(question)\n                    const IQObject = {question:question.value, answer:answer.value, user_id:id}\n                    const {data} = await axios.post('/dashboard/new-IQ', IQObject)\n                    console.log(data)\n                    changeDisplayOutput(data)\n                    setIQFormModalIsOpen(false)\n                    setIQFeedbackModal(true)\n                }\n                \n                switch(displayCategory){\n                    case 'contacts':\n                        return(\n                            <div className=\"display-panel\">\n                                <Modal closeTimeoutMS={100} isOpen={contactsFeedbackModalIsOpen} onRequestClose={()=>setContactsFeedbackModalIsOpen(false)}>\n                                    <div className=\"data-confirm\">\n                                        <h2>We added your new contact!</h2>\n                                        <button className=\"new-app-btn\" onClick={()=> setContactsFeedbackModalIsOpen(false)}>Close</button>\n                                    </div>\n                                </Modal>\n                                <Modal style={{content: {position:'static'}}}closeTimeoutMS={100} isOpen={contactsModalIsOpen} onRequestClose={()=>setContactsModalIsOpen(false)}>\n                                    <form className=\"modal-form\" onSubmit={createNewContact}>\n                                        <label htmlFor=\"name\">Name</label>\n                                        <input className=\"signup-input\" type=\"text\" name=\"name\" id=\"name\"/>\n                                        <label htmlFor=\"phone\">Phone</label>\n                                        <input className=\"signup-input\" type=\"text\" name=\"phone\" id=\"phone\"/>\n                                        <label htmlFor=\"email\">Email</label>\n                                        <input type=\"text\" name=\"email\" id=\"email\"/>\n                                        <label htmlFor=\"date_contacted\">Date</label>\n                                        <input className=\"signup-input\" type=\"date\" name=\"date_contacted\" id=\"date_contacted\"/>\n                                        <input className=\"modal-btn\" type=\"submit\" value=\"Submit\"/>\n                                    </form>\n                                </Modal>\n                                <h3 className=\"page-title\">Contacts</h3>\n                                <button className=\"new-app-btn\" onClick={()=>setContactsModalIsOpen(true)}>Add New Contact</button>\n                                {/* OUTPUT CLASS */}\n                                <div className=\"job-output\">\n                                    <ul className=\"contacts-ul\">\n                                        <li>Name</li>\n                                        <li>Phone</li>\n                                        <li>Email</li>\n                                        <li>Date Contacted</li>\n                                    </ul>\n                                    {displayOutPut.map(item => \n                                    <ul className=\"contacts-ul\">\n                                        <li>{item.name}</li>\n                                        <li>{item.phone}</li>\n                                        <li>{item.email}</li>\n                                        <li>{new Date(item.date_contacted).toLocaleDateString()}</li>\n                                    </ul>)}\n                                </div>\n                            </div>\n            )\n                case 'job-tracker':\n                    return(\n                        <div className=\"display-panel\">\n                            <Modal closeTimeoutMS={100} isOpen={jobFormFeedbackModalIsOpen} onRequestClose={()=>setJobFormFeedbackModalIsOpen(false)}>\n                                <div className=\"data-confirm\">\n                                    <h2>Data Submitted!</h2>\n                                    <p>.jobfolder will be checking in on your progress</p>\n                                    <button className=\"new-app-btn\" onClick={()=> setJobFormFeedbackModalIsOpen(false)}>Close</button>\n                                </div>\n                            </Modal>\n                            <Modal style={{content: {position:'static'}}}closeTimeoutMS={100} isOpen={jobAppFormModalIsOpen} onRequestClose={()=> setJobAppFormModalIsOpen(false)}>\n\n                                {/* **added class** */}\n                                <form className=\"modal-form\" onSubmit={(e)=>createNewAppRecord(e)} action=\"\">\n                                    <label htmlFor=\"company_name\">Company Name</label>\n                                    <input className=\"signup-input\" name=\"company_name\" id=\"company_name\"type=\"text\"/>\n                                    \n                                    <label htmlFor=\"role\">Role</label>\n                                    <input className=\"signup-input\" name=\"role\" id=\"role\"type=\"text\"/>\n                                    \n                                    <label htmlFor=\"phone\">Phone</label>\n                                    <input className=\"signup-input\" name=\"phone\" id=\"phone\"type=\"text\"/>\n                                    \n                                    <label htmlFor=\"website\">Website</label>\n                                    <input className=\"signup-input\" name=\"website\" id=\"website\"type=\"text\"/>\n                                    \n                                    <label htmlFor=\"contact_name\">Contact Name</label>\n                                    <input className=\"signup-input\" name=\"contact_name\" id=\"contact_name\"type=\"text\"/>\n                                    \n                                    <label htmlFor=\"contact_phone\">Contact Phone</label>\n                                    <input className=\"signup-input\" name=\"contact_phone\" id=\"contact_phone\"type=\"text\"/>\n                                    \n                                    <label htmlFor=\"contact_email\">Contact Email</label>\n                                    <input className=\"signup-input\" name=\"contact_email\" id=\"contact_email\"type=\"text\"/>\n                                    \n                                    <label htmlFor=\"date_applied\">Date Applied</label>\n                                    <input className=\"signup-input\" type=\"date\" name=\"date_applied\" id=\"date_applied\"/>\n                                    <input className=\"modal-btn\" type=\"submit\" value=\"Submit\"/>\n                                </form>\n                            </Modal>\n                        \n\n                        <h3 className=\"page-title\">Job Tracker</h3>\n                        <button className=\"new-app-btn\" onClick={()=> setJobAppFormModalIsOpen(true)}>Add New Job</button>\n\n\n                    {/* JOB-OUTPUT */}\n                        <div className=\"job-output\">\n                            <Modal isOpen={interviewModalIsOpen} onRequestClose={()=>setInterviewModalIsOpen(false)}>\n                                <div>When did you interview with {companyName}</div>\n                                <form onSubmit={updateInterview} action=\"\">\n                                    <label htmlFor=\"interview-date\"></label>\n                                    <input type=\"date\" name=\"date_interviewed\" id=\"interview-date\"/>\n                                    <input type=\"submit\" value=\"Submit\"/>\n                                </form>\n                            </Modal>\n                            <Modal isOpen={interviewFeedBackIsOpen} onRequestClose={()=>setInterviewFeedBackIsOpen(false)}>\n                                <h2>Congratulations!!</h2>\n                                <p>We updated your records</p>\n                                <p>Don't forget to write a thank you note for the interview. We'll be reminding you.</p>\n                                <button onClick={(e)=>setInterviewFeedBackIsOpen(false)}>Close</button>\n                            </Modal>\n                            <ul className=\"jobs-ul\">\n                                <li>Company</li>\n                                <li>Role</li>\n                                <li>Date Applied</li>\n                                <li>Interviewed</li>\n                            </ul>\n                            {displayOutPut.map((item, idx) => \n                                    <ul className=\"jobs-ul\">\n                                        <li data-companyid={item.id} className={`company-name-${idx}`}>{item.company_name}</li>\n                                        <li className={`role-${idx}`}>{item.role}</li>\n                                        <li>{new Date(item.date_applied).toLocaleDateString()}</li>\n                                        <li>{item.interviewed ? 'Yes':<button onClick={(e)=>{\n                                                const companyEl = document.querySelector(`.company-name-${idx}`)\n                                                const companyName = companyEl.innerText\n                                                const roleEl = document.querySelector(`.company-name-${idx}`)\n                                                const roleName = roleEl.innerText\n                                                setInterviewModalIsOpen(true)\n                                                setCompanyName(companyName)\n                                                setCompanyId(companyEl.dataset.companyid)\n                                            }} >Update</button>\n                                            \n                                                }</li>\n                                    </ul>)}\n                        </div>\n                    </div>\n                )\n                case 'interview-questions':\n                    return(\n                        <div className=\"display-panel\">\n                        <Modal closeTimeoutMS={100} isOpen={IQFeedbackModalIsOpen} onRequestClose={()=>setIQFeedbackModal(false)}>\n                            <h1 className=\"data-confirm\">Interview Question Submitted</h1>\n                            <button onClick={()=>setIQFeedbackModal(false)}>Close</button>\n                        </Modal>\n\n                        <Modal style={{content: {position:'static'}}} closeTimeoutMS={100} isOpen={IQFormModalIsOpen} onRequestClose={()=> setIQFormModalIsOpen(false)}>\n                            <form className=\"modal-form\" onSubmit={createNewIQ}action=\"\">\n                                <label htmlFor=\"interview-question\">Question</label>\n                                <input className=\"signup-input\" name=\"question\" id=\"interview-question\" type=\"text\"/>\n                                <label htmlFor=\"interview-answer\">Answer (If its summarizable)</label>\n                                <input  className=\"signup-input\" name=\"answer\" id=\"interview-answer\" type=\"text\"/>\n                                <input className=\"modal-btn\" type=\"submit\" value=\"Submit\"/>\n                            </form>\n                        </Modal>\n                        \n                        <h3 className=\"page-title\">Interview</h3>\n                        <button className=\"new-app-btn\" onClick={()=> setIQFormModalIsOpen(true)}> Add New Interview Question</button>\n\n                        <div className=\"job-output\">\n                        {displayOutPut.map((item, idx) => \n                            <div>\n                                <ul className=\"IQ-ul\">\n                                    <li className=\"IQ-li\">{idx+1}. {item.question}</li>\n                                    <li className=\"IQ-li\">{item.answer}</li>\n                                </ul>\n                                <button data-iq_id={item.id} onClick={(e)=> deleteIQ(e)}className=\"download-btn\">Delete Question</button>\n                            </div>\n                    )}\n                </div>\n                </div>\n            )\n\n                default:\n                    return(\n                        <div className=\"display-panel\">\n                                <Modal style={{content: {position:'static'}}} closeTimeoutMS={100} isOpen={docUploadModalIsOpen} onRequestClose={()=>setDocUploadModalIsOpen(false)}>\n\n                                    <form className=\"modal-form\" onSubmit={uploadDocument} method=\"POST\" encType=\"multipart/form-data\">\n                                        <label htmlFor=\"file\">Select a File</label>\n                                        <input type=\"file\" name=\"file\" id=\"file\"/>\n\n                                        <input className=\"modal-btn\" type=\"submit\" value=\"Upload\"/>\n                                    </form>\n                                </Modal>\n\n                                \n                                <Modal closeTimeoutMS={100} isOpen={docUploadFeedbackModalIsOpen} onRequestClose={()=>setDocUploadFeedbackModalIsOpen(false)}>\n                                    <div className=\"modal-form\">\n                                        <h2 className=\"data-confirm\">Document Uploaded</h2>\n                                        <button onClick={()=>setDocUploadFeedbackModalIsOpen(false)}>Close</button>\n                                    </div>\n                                </Modal>\n\n                            <button className=\"new-app-btn\" onClick={()=> {setDocUploadModalIsOpen(true)}}>Upload</button>    \n\n                            <div className=\"job-output\">\n                                {displayOutPut.map((item, idx) =>\n                                    \n                                    <ul className=\"doc-ul\">\n                                        {<li className={`document-${idx}`} data-token={item.token}>{item.title}</li>}\n                                        <li>\n                                            <a href={`/dashboard/download/${id}/${item.token}/${item.title}`}>\n                                                <button className=\"download-btn\">Download</button>\n                                            </a>\n                                        </li>\n                                        <li>\n                                            <button onClick={(e)=>deleteDoc(e)} data-doc_id={item.id} className=\"download-btn\">Delete</button>\n                                        </li>\n                                    </ul>\n                                    )\n                                }\n                            </div>                          \n\n                            \n                        </div>\n\n                    )\n    }\n}\nexport default DisplayPanel","function TimeSelect({dayOfWeek}){\n    return(\n        <select name={dayOfWeek} id=\"\">\n            <option value=\"0\">12:00 a.m.</option>\n            <option value=\"30\">12:30 a.m.</option>\n            <option value=\"100\">1:00 a.m.</option>\n            <option value=\"130\">1:30 a.m.</option>\n            <option value=\"200\">2:00 a.m.</option>\n            <option value=\"230\">2:30 a.m.</option>\n            <option value=\"300\">3:00 a.m.</option>\n            <option value=\"330\">3:30 a.m.</option>\n            <option value=\"400\">4:00 a.m.</option>\n            <option value=\"430\">4:30 a.m.</option>\n            <option value=\"500\">5:00 a.m.</option>\n            <option value=\"530\">5:30 a.m.</option>\n            <option value=\"600\">6:00 a.m.</option>\n            <option value=\"630\">6:30 a.m.</option>\n            <option value=\"700\">7:00 a.m.</option>\n            <option value=\"730\">7:30 a.m.</option>\n            <option value=\"800\">8:00 a.m.</option>\n            <option value=\"830\">8:30 a.m.</option>\n            <option value=\"900\">9:00 a.m.</option>\n            <option value=\"930\">9:30 a.m.</option>\n            <option value=\"1000\">10:00 a.m.</option>\n            <option value=\"1030\">10:30 a.m.</option>\n            <option value=\"1100\">11:00 a.m.</option>\n            <option value=\"1130\">11:30 a.m.</option>\n            <option value=\"1200\">12:00 p.m.</option>\n            <option value=\"1230\">12:30 p.m.</option>\n            <option value=\"1300\">1:00 p.m.</option>\n            <option value=\"1330\">1:30 p.m.</option>\n            <option value=\"1400\">2:00 p.m.</option>\n            <option value=\"1430\">2:30 p.m.</option>\n            <option value=\"1500\">3:00 p.m.</option>\n            <option value=\"1530\">3:30 p.m.</option>\n            <option value=\"1600\">4:00 p.m.</option>\n            <option value=\"1630\">4:30 p.m.</option>\n            <option value=\"1700\">5:00 p.m.</option>\n            <option value=\"1730\">5:30 p.m.</option>\n            <option value=\"1800\">6:00 p.m.</option>\n            <option value=\"1830\">6:30 p.m.</option>\n            <option value=\"1900\">7:00 p.m.</option>\n            <option value=\"1930\">7:30 p.m.</option>\n            <option value=\"2000\">8:00 p.m.</option>\n            <option value=\"2030\">8:30 p.m.</option>\n            <option value=\"2100\">9:00 p.m.</option>\n            <option value=\"2130\">9:30 p.m.</option>\n            <option value=\"2200\">10:00 p.m.</option>\n            <option value=\"2230\">10:30 p.m.</option>\n            <option value=\"2300\">11:00 p.m.</option>\n            <option value=\"2330\">11:30 p.m.</option>\n\n        </select>\n    )    \n\n}\nexport default TimeSelect","import './styles/Dashboard.css'\nimport { RiSettings4Fill } from \"react-icons/ri\";\nimport Modal from 'react-modal'\nimport {useState} from 'react'\nimport TimeSelect from './TimeSelect';\nimport axios from 'axios'\n\nfunction Settings({name}){\n    const [stgsModalOpen, setStgsModalOpen] = useState(false)\n    const [stgsFdbackModalOpen, setStgsFdbackModalOpen] = useState(false)\n    async function updateSettings(e){\n        e.preventDefault()\n\n        const { tenDayFollowUp, tyFollowUp, sun_iq_time, iq_sun, mon_iq_time, iq_mon, tue_iq_time, iq_tue, wed_iq_time, iq_wed,\n        thu_iq_time, iq_thu, fri_iq_time, iq_fri, sat_iq_time, iq_sat } = e.target.elements\n        \n        let body = {\n            // tenDayFollowUp:tenDayFollowUp.checked, tyFollowUp:tyFollowUp.checked,\n            sun_iq_time:parseInt(sun_iq_time.value), \n            mon_iq_time:parseInt(mon_iq_time.value), \n            tue_iq_time:parseInt(tue_iq_time.value), \n            wed_iq_time:parseInt(wed_iq_time.value), \n            thu_iq_time:parseInt(thu_iq_time.value), \n            fri_iq_time:parseInt(fri_iq_time.value), \n            sat_iq_time:parseInt(sat_iq_time.value), \n            iq_sun:iq_sun.checked, \n            iq_mon:iq_mon.checked, \n            iq_tue:iq_tue.checked, \n            iq_wed:iq_wed.checked,\n            iq_thu:iq_thu.checked, \n            iq_fri:iq_fri.checked, \n            iq_sat:iq_sat.checked}\n\n        await axios.post('/update-settings',  body)\n        setStgsModalOpen(false)\n        console.log('closed settings modal')\n        setStgsFdbackModalOpen(true)\n        console.log('closed settings feedback modal')\n    }\n\n    return(\n        <div className=\"settings-container\">\n            <Modal closeTimeoutMS={100} isOpen={stgsFdbackModalOpen} onRequestClose={()=>setStgsFdbackModalOpen(false)}>\n                <h2>Settings Updated</h2>\n                <button onClick={()=>setStgsFdbackModalOpen(false)}>Close</button>\n            </Modal>\n            <Modal style={{content: {position:'static'}}} closeTimeoutMS={100} isOpen={stgsModalOpen} onRequestClose={()=>setStgsModalOpen(false)}>\n\n                <form onSubmit={(e)=> updateSettings(e)} className=\"settings-modal\">\n                    <div className=\"follow-up-modal\">\n                    <label htmlFor=\"follow-up\">Follow-ups</label>\n                    <input type=\"checkbox\" id=\"follow-up\" name=\"tenDayFollowUp\"/>\n                    </div>\n\n                    <div className=\"ty-modal\">\n                    <label htmlFor=\"ty-letter\">Thank-Yous</label>\n                    <input type=\"checkbox\" id=\"ty-letter\" name=\"tyFollowUp\"/>\n                    </div>\n                    <div className=\"iq-day\">\n                    <h2>IQ Emails</h2>\n                    </div>\n                \n                    <div className=\"week-modal\">\n                    <label htmlFor=\"sun\">Sunday</label>\n                    <input type=\"checkbox\" name=\"iq_sun\" id=\"sun\"/>\n                    <TimeSelect dayOfWeek={\"sun_iq_time\"}/>\n                    </div>\n\n                    <div className=\"week-modal\">\n                    <label htmlFor=\"mon\">Monday</label>\n                    <input type=\"checkbox\" name=\"iq_mon\" id=\"mon\"/>\n                    <TimeSelect dayOfWeek={\"mon_iq_time\"}/>\n                    </div>\n                    \n                    <div className=\"week-modal\">\n                    <label htmlFor=\"tue\">Tuesday</label>\n                    <input type=\"checkbox\" name=\"iq_tue\" id=\"tue\"/>\n                    <TimeSelect dayOfWeek={\"tue_iq_time\"}/>\n                    </div>\n\n                     <div className=\"week-modal\">  \n                    <label htmlFor=\"wed\">Wednesday</label>\n                    <input type=\"checkbox\" name=\"iq_wed\" id=\"wed\"/>\n                    <TimeSelect dayOfWeek={\"wed_iq_time\"}/>\n                    </div>\n\n                    <div className=\"week-modal\">\n                    <label htmlFor=\"thu\">Thursday</label>\n                    <input type=\"checkbox\" name=\"iq_thu\" id=\"thu\"/>\n                    <TimeSelect dayOfWeek={\"thu_iq_time\"}/>\n                    </div>\n\n                    <div className=\"week-modal\">\n                    <label htmlFor=\"fri\">Friday</label>\n                    <input type=\"checkbox\" name=\"iq_fri\" id=\"fri\"/>\n                    <TimeSelect dayOfWeek={\"fri_iq_time\"}/>\n                    </div>\n\n                    <div className=\"week-modal\">\n                    <label htmlFor=\"sat\">Saturday</label>\n                    <input type=\"checkbox\" name=\"iq_sat\" id=\"sat\"/>\n                    <TimeSelect dayOfWeek={\"sat_iq_time\"}/>\n                    </div>\n\n                    <input className=\"modal-btn\"type=\"submit\" value=\"Submit\"/>\n                </form>\n                \n            </Modal>\n            <div className=\"settings-bar\">\n                <h4 className=\"settings\">Hi, {name}!</h4>\n            </div>\n            <div className=\"gear-settings\">\n                <RiSettings4Fill onClick={()=> setStgsModalOpen(true)}/>\n            </div>\n             <div>\n                <h4 className=\"gear-text\">Settings</h4>\n            </div>\n        </div>\n    )\n}\nexport default Settings","import './styles/HeadsUpDisplay.css'\n\nfunction HeadsUpDisplay({countOfJobs,appReality,appRatio,inspiration}) {\n    return(\n        <>  \n        \n            <div className=\"head1\">\n              <span># of Jobs Applied</span>\n              <p className=\"count-in-head\">{countOfJobs}</p>\n            </div>\n            <div className=\"head2\">\n            <div className=\"day\">Per Day</div>\n              <span>Job Goal</span>\n              <p className=\"count-in-head\">{appRatio}</p>\n              <span>Your Ratio</span>\n              <p className=\"count-in-head\">{appReality} </p>\n            </div>\n            <div className=\"head3\">\n                <div className=\"quote\">\n                <p>{inspiration.quote}</p>\n            </div>\n            <div className=\"author\">\n                <p>{inspiration.author}</p>\n            </div>\n            </div>\n            \n        </>\n    )\n}\nexport default HeadsUpDisplay","import { Link } from 'react-router-dom'\nimport './styles/Dashboard.css'\nimport './styles/DisplayPanel.css'\nimport Sidebar from './Sidebar';\nimport DisplayPanel from './DisplayPanel';\nimport Settings from './Settings';\nimport HeadsUpDisplay from './HeadsUpDisplay';\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom';\n\nfunction Dashboard({id, setId,name, countOfJobs, appRatio, \n            inspiration,appReality,displayOutPut,\n            changeDisplayOutput, populateDashboard}){\n    \n    const [displayCategory, setDisplayCategory] = useState('job-tracker')\n    const history = useHistory();\n\n    async function getSummaryData(e){\n        const category = e.currentTarget.className\n        console.log(category)\n        const {data} = await axios.get(`/dashboard/${category}/${id}`)\n        setDisplayCategory(category)\n        changeDisplayOutput(data)\n    }\n\n    const checkSession = async () => {\n        const response = await axios.get('/sign-in/check-session')\n        console.log('line 19', response)\n        if(response.data === 'null'){\n            return\n        } else {\n            populateDashboard(response.data)\n            setId(response.data)\n            console.log('popDash ran')\n            history.push('/dashboard')\n        }\n    }\n    useEffect(()=> {\n        checkSession()\n    }, [])\n\n\n    return (\n        <div className=\"grid-container\">\n            <Sidebar id={id} getSummaryData={getSummaryData}/>\n            <HeadsUpDisplay \n                    countOfJobs={countOfJobs}\n                    appRatio={appRatio}\n                    inspiration={inspiration}\n                    appReality={appReality} />\n            <Settings name={name}/>\n            <DisplayPanel   \n                id={id}\n                displayCategory={displayCategory} \n                setDisplayCategory={setDisplayCategory}\n                changeDisplayOutput={changeDisplayOutput} \n                displayOutPut={displayOutPut}\n                countOfJobs={countOfJobs}\n                appRatio={appRatio}\n                inspiration={inspiration}\n                appReality={appReality}\n                />\n        </div>\n\n    )\n}\n\nexport default Dashboard","import './styles/Hero.css'\n\n\nimport {\n    Link\n} from 'react-router-dom';\n\nfunction Hero() {\n    return (\n        <>\n            <div className=\"hero-container\">\n                <div className=\"hero-title\">\n                    <h1>.jobfolder</h1>\n                    <h4>Let us help you make your job search, less stressful!</h4>\n                    <Link to='/credentials'className=\"hero-signup-btn\">Get started</Link>\n                </div>\n                <div className=\"paper-one\">\n                <div className=\"folder\">\n                    \n                </div>\n                </div>\n            </div>\n       </> \n    )\n}\n\nexport default Hero","import {\n    BrowserRouter as Router,\n    Switch, \n    Route, \n    useHistory\n} from 'react-router-dom';\n\nimport { useState, useEffect } from 'react'\nimport Sidebar from './components/Sidebar';\nimport Credentials from './components/Credentials';\nimport Dashboard from './components/Dashboard';\nimport Hero from './components/Hero';\nimport axios from 'axios';\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [id, setId] = useState(0)\n    const [name, setName] = useState('')\n    const [countOfJobs, setCountOfJobs] = useState(0)\n    const [appRatio, setAppRatio] = useState(0)\n    const [appReality, setAppReality] = useState(0)\n    const [inspiration, setInspiration] = useState({})\n    const [displayOutPut, changeDisplayOutput] = useState([]);\n    const history = useHistory()\n    \n    async function populateDashboard(uid){\n        console.log('populate dashboard is running')\n        const {data} = await axios.get(`/dashboard/dashboard-data/${uid}`)\n        console.log(data)\n        const { author, quote } = data.inspiration[0]\n        console.log('author', author)\n        setName(data.first)\n        changeDisplayOutput(data.jobsAppliedTo)\n        setCountOfJobs(data.jobCount)\n        setAppRatio(data.dailyAppGoal)\n        setAppReality(data.dailyAppReality)\n        setInspiration({author, quote})\n\n        \n    }\n    \n    return (\n    <Router>\n            <Route exact path='/'>\n                <Hero />    \n            </Route>        \n            <Route exact path='/credentials'>\n                <Credentials setName={setName} id={id} populateDashboard={populateDashboard}setId={setId}/>\n            </Route>    \n            <Route exact path='/dashboard'>\n                <Dashboard \n                    id={id}\n                    setId={setId}\n                    name={name}\n                    countOfJobs={countOfJobs}\n                    appRatio={appRatio}\n                    inspiration={inspiration}\n                    displayOutPut={displayOutPut}\n                    changeDisplayOutput={changeDisplayOutput}\n                    countOfJobs={countOfJobs}\n                    appRatio={appRatio}\n                    inspiration={inspiration}\n                    appReality={appReality}\n                    populateDashboard={populateDashboard}\n                />\n            </Route>    \n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}